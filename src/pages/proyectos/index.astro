---
import BadgeTag from '@/components/badge-tag.astro'
import Code from '@/components/icons/code.icon.astro'
import Layout from '@/layouts/Layout.astro'
import { getCollection } from 'astro:content'

const projects = await getCollection('projects')
---

<Layout>
  <section class="grow flex gap-x-8 xl:gap-x-12">
    <div class="lg:w-[60%] flex flex-col gap-y-6 grow">
      <h1 class="font-headings">Proyectos</h1>
      <p class="text-base sm:text-lg">
        Como todo en la vida, los trabajos que he desarrollado a lo largo de mi
        camino en el mundo de la programación web han ido evolucionando y
        mejorando con el tiempo. A día de hoy sigo con el mismo interés que
        cuando empecé, me esfuerzo por mantenerme al día con las últimas
        tecnologías, y fruto de ello paso a mostrarte algunos de los proyectos
        de los que más orgulloso me siento. Son el reflejo del sacrificio, el
        aprendizaje y la dedicación de todos estos años.
      </p>
      <article class="flex flex-col gap-y-4">
        {
          projects.map((project, index) => (
            <div
              data-image={project.data.featuredImage}
              data-title={project.data.title}
              class="project group space-y-4 sm:space-y-0"
            >
              <div class="flex flex-col gap-y-1 sm:flex-row sm:justify-between">
                <a
                  href={project.data.link}
                  rel="noopener noreferrer"
                  target="_blank"
                  class="overflow-hidden leading-none py-1"
                >
                  <h3
                    style={{
                      animationDelay: `${index * 100}ms`,
                      animationDuration: '2s',
                    }}
                    class="hover:text-primary transition-colors duration-300 font-headings animate-slide-full-in-bottom animate-bezier-quart-in-out "
                  >
                    {project.data.title}
                  </h3>
                </a>
                <div class="animate-fade-in animate-delay-1000 flex flex-wrap items-center gap-2 ">
                  {project.data.tags.map((tag, i) => (
                    <div
                      style={{ transitionDelay: `${i * 50}ms` }}
                      class="lg:opacity-0 group-hover:opacity-100 transition-opacity duration-500"
                    >
                      <BadgeTag text={tag} />
                    </div>
                  ))}
                </div>
              </div>
              <div class="overflow-hidden leading-none">
                <p
                  style={{
                    animationDelay: `${index * 100 + 250}ms`,
                    animationDuration: '2s',
                  }}
                  class="text-base animate-slide-full-in-bottom animate-bezier-quart-in-out "
                >
                  {project.data.description}
                </p>
              </div>
            </div>
          ))
        }
      </article>
    </div>
    <div class="h-full lg:w-[40%] flex items-center relative">
      <div
        id="imageDisplay"
        class="shadow-[0_3px_10px_rgb(0,0,0,0.2)] rounded-lg absolute w-full h-full transition-opacity duration-1000 bg-center bg-cover bg-no-repeat opacity-0"
      >
      </div>
    </div>
    <Code
      classNames="opacity-20 -z-10 bottom-[8rem] absolute md:w-[550px] rotate-[-18deg] md:right-[6rem]"
    />
  </section>
</Layout>

<script>
  document.addEventListener('astro:page-load', () => {
    const projects = document.querySelectorAll(
      '.project',
    ) as NodeListOf<HTMLDivElement>
    const imageProject = document.querySelector(
      '.image-project',
    ) as HTMLImageElement

    const imageDisplay = document.getElementById(
      'imageDisplay',
    ) as HTMLDivElement

    projects.forEach((project) => {
      project.addEventListener('mouseover', () => {
        const src = project.dataset.image
        imageDisplay.style.backgroundImage = `url(${src})`
        imageDisplay.classList.remove('animate-fade-out-custom')
        imageDisplay.classList.add('animate-fade-in-and-pan')
      })

      project.addEventListener('mouseout', () => {
        // Capturar la posición actual del background-position antes de quitar la clase para que no de un salto
        const currentPosition =
          getComputedStyle(imageDisplay).backgroundPosition

        // Quitar la animación y fijar la posición actual
        imageDisplay.style.backgroundPosition = currentPosition
        imageDisplay.classList.remove('animate-fade-in-and-pan')
        imageDisplay.classList.add('animate-fade-out-custom')
      })
    })
  })
</script>
